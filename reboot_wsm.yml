---
- hosts: 10.110.100.96
  gather_facts: false
  vars:
    file_path_to_send: /etc/ansible/resources/hello.txt
    target_dir: /appsw/swdpt/
  tasks:
  
    - name: Verify that User Started wbtb exists
      shell: cat /etc/passwd | grep wbtb | wc -l
      register: wbtb_user_count
      
      
    - name: Stop Playbook If WebToB User doesn't Exists
      meta: end_host
      when: wbtb_user_count.stdout | int < 1
      
      
    - name: Verify WSM User
      shell: "ps -ef | grep wsm | cut -d ' ' -f 1 | grep -v hfadmin"
      register: wsm_user
     
     
    - name: Count for WSM Running user
      shell: ps -ef | grep wsm | grep -v root | wc -l
      register: count_wsm_running
   
   
    - name: Print How Many WSM Process Running Actually
      debug:
        msg: "{{ count_wsm_running.stdout | int - 1 }}"
  
  
    - name: End Playbook if There is no wsm process
      meta: end_host
      when: count_wsm_running.stdout | int < 2
  
  
    - name: Print wsm_user
      debug:
        msg: WSM is Running by User {{ wsm_user.stdout_lines }}
        
        
        
    - name: Set Facts for wsm User0
      set_fact:
        wsm_user0: "{{ wsm_user.stdout_lines[0] }}"
        
    - name: Set Facts for wsm User1
      set_fact:
        wsm_user1: "{{ wsm_user.stdout_lines[1] }}"       
         
     - name: Set Facts for wsm User2
      set_fact:
        wsm_user2: "{{ wsm_user.stdout_lines[2] }}"
        
     - name: Set Facts for wsm User3
      set_fact:
        wsm_user2: "{{ wsm_user.stdout_lines[3] }}"
        
        
        
     - name: Create Reboot Scrript for WSM_USER0
       template:
         src: templates/wsreboot0.j2
         dest: /appsw/swdpt/{{ wsm_user.stdout_lines[0] }}/webtob5/bin/wsreboot.sh
         owner: "{{ wsm_user.stdout_lines[0] }}"
         group: app
         mode: 0511
       become: yes
       ignore_errors: yes
       
      - name: Create Reboot Scrript for WSM_USER1
       template:
         src: templates/wsreboot1.j2
         dest: /appsw/swdpt/{{ wsm_user.stdout_lines[1] }}/webtob5/bin/wsreboot.sh
         owner: "{{ wsm_user.stdout_lines[1] }}"
         group: app
         mode: 0511
       become: yes
       ignore_errors: yes
       
      - name: Create Reboot Scrript for WSM_USER2
       template:
         src: templates/wsreboot2.j2
         dest: /appsw/swdpt/{{ wsm_user.stdout_lines[2] }}/webtob5/bin/wsreboot.sh
         owner: "{{ wsm_user.stdout_lines[2] }}"
         group: app
         mode: 0511
       become: yes
       ignore_errors: yes
       
      - name: Create Reboot Scrript for WSM_USER3
       template:
         src: templates/wsreboot3.j2
         dest: /appsw/swdpt/{{ wsm_user.stdout_lines[3] }}/webtob5/bin/wsreboot.sh
         owner: "{{ wsm_user.stdout_lines[3] }}"
         group: app
         mode: 0511
       become: yes
       ignore_errors: yes
       
       
       
       
       
       - name: Reboot WSM for {{ wsm_user.stdout_lines[0] }}
         shell: sh wsreboot.sh
         args:
           chdir: /appsw/swdpt/{{ wsm_user.stdout_lines[0] }}/webtob5/bin
         become: yes
         ignore_errors: yes
         
         
        - name: Reboot WSM for {{ wsm_user.stdout_lines[1] }}
         shell: sh wsreboot.sh
         args:
           chdir: /appsw/swdpt/{{ wsm_user.stdout_lines[1] }}/webtob5/bin
         become: yes
         ignore_errors: yes
        
       - name: Reboot WSM for {{ wsm_user.stdout_lines[2] }}
         shell: sh wsreboot.sh
         args:
           chdir: /appsw/swdpt/{{ wsm_user.stdout_lines[2] }}/webtob5/bin
         become: yes
         ignore_errors: yes
         
        - name: Reboot WSM for {{ wsm_user.stdout_lines[3] }}
         shell: sh wsreboot.sh
         args:
           chdir: /appsw/swdpt/{{ wsm_user.stdout_lines[3] }}/webtob5/bin
         become: yes
         ignore_errors: yes
